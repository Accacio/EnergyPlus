name: Develop Branch Testing

on:
  push:
    branches: [ develop ]  # run this on all commits to the develop branch

defaults:
  run:
    shell: bash

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FC: gfortran-13
  Python_REQUIRED_VERSION: 3.12.3  # 3.12.2 not available on Ubuntu 24 GHA

jobs:
  build_and_test:
    name: Standard Build on ${{ matrix.pretty }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-12
          macos_dev_target: 12.1
          arch: x86_64
          python-arch: x64
          generator: "Unix Makefiles"
          nproc: 3
          pretty: "Mac x64"
        - os: macos-14
          macos_dev_target: 13.0
          arch: arm64
          python-arch: arm64
          generator: "Unix Makefiles"
          nproc: 3
          pretty: "Mac arm64"
        - os: ubuntu-24.04
          arch: x86_64
          python-arch: x64
          generator: "Unix Makefiles"
          nproc: 4
          pretty: "Ubuntu 24.04"
        - os: windows-2019
          arch: x86_64
          python-arch: x64
          generator: "Visual Studio 16 2019"
          nproc: 4
          pretty: "Windows VS 2019"
        - os: windows-2022
          arch: x86_64
          python-arch: x64
          generator: "Visual Studio 17 2022"
          nproc: 4
          pretty: "Windows VS 2022"

    steps:

    - name: Set up Python ${{ env.Python_REQUIRED_VERSION }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.Python_REQUIRED_VERSION }}

    - name: Install Dependencies for Mac
      if: ${{ runner.os == 'macOS' }}
      run: |
        brew update
        brew install gcc@13
        echo "FC=$(brew --prefix gcc@13)/bin/gfortran-13" >> $GITHUB_ENV
        echo MACOSX_DEPLOYMENT_TARGET=${{ matrix.macos_dev_target }} >> $GITHUB_ENV

    - name: Install Dependencies for Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install libxkbcommon-x11-0 xorg-dev libgl1-mesa-dev
        if [[ "${{ matrix.os }}" == "ubuntu-24.04" ]]; then
          # https://github.com/actions/runner-images/issues/10025
          echo "FC=gfortran-13" >> $GITHUB_ENV
        fi

    - uses: actions/checkout@v4

    - name: Create Build Directory
      run: cmake -E make_directory ./build/

    - name: Configure CMake
      working-directory: ./build
      run: >
        cmake
        -G "${{ matrix.generator }}"
        -DCMAKE_BUILD_TYPE:STRING=Release
        -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=${{ matrix.macos_dev_target }}
        -DLINK_WITH_PYTHON:BOOL=ON
        -DPython_REQUIRED_VERSION:STRING=${{ steps.setup-python.outputs.python-version }}
        -DPython_ROOT_DIR:PATH=$RUNNER_TOOL_CACHE/Python/${{ steps.setup-python.outputs.python-version }}/${{ matrix.python-arch }}/
        -DBUILD_TESTING:BOOL=ON
        -DBUILD_FORTRAN:BOOL=ON
        -DBUILD_PACKAGE:BOOL=OFF
        -DDOCUMENTATION_BUILD:STRING=DoNotBuild
        -DENABLE_OPENMP:BOOL=OFF
        -DUSE_OpenMP:BOOL=OFF
        ../

    - name: Build
      id: build
      working-directory: ./build
      run: cmake --build . -j ${{ matrix.nproc }} --config Release

    - name: Test
      working-directory: ./build
      run: ctest -C Release -E Basement -j ${{ matrix.nproc }}
